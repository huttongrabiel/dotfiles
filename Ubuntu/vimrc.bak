syntax enable on
set termguicolors
set background=dark

inoremap kj <esc>

set backspace=indent,eol,start
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set relativenumber
set nu
set noswapfile
set nowrap
set ruler
set incsearch
set noerrorbells
set nohlsearch
set colorcolumn=80

vnoremap <C-c> "+y

"" ctags settings
set tags=./tags;/
"" Ctrl-\ open definition in new tab
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
"" Alt+] open definition in vertical split
map <A-]> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>

"" Compile C++ with F4 (Competitive Programming ONLY!!)
autocmd filetype cpp nnoremap <F4> :w <bar> exec '!g++ '.shellescape('%').' -o '.shellescape('%:r').' && ./'.shellescape('%:r')<CR>

call plug#begin(stdpath('data') . '/plugged')
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'
Plug 'neovim/nvim-lspconfig'
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/cmp-buffer'
Plug 'hrsh7th/cmp-path'
Plug 'hrsh7th/cmp-cmdline'
Plug 'hrsh7th/nvim-cmp'

Plug 'folke/tokyonight.nvim', { 'branch': 'main' }
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'APZelos/blamer.nvim'
Plug 'sevko/vim-nand2tetris-syntax'
call plug#end()

colorscheme tokyonight

let g:tokyonight_style = "storm"
let g:tokyonight_transparent=1

highlight Normal guibg=none
highlight LineNr guifg=#5eacd3

"" git blame plugin
let g:blamer_enabled = 1

let mapleader = " "

"" Delete without yanking
nnoremap <leader>d "_d
vnoremap <leader>d "_d

"" Yank to clipboard
nnoremap <leader>y "+y
vnoremap <leader>y "+y

" Find files using Telescope command-line sugar.
nnoremap <leader>ff <cmd>Telescope find_files<cr>
nnoremap <leader>fg <cmd>Telescope live_grep<cr>
nnoremap <leader>fb <cmd>Telescope buffers<cr>
nnoremap <leader>fh <cmd>Telescope help_tags<cr>

" COC Code Navigation
""nmap <silent> gd <Plug>(coc-definition)
""nmap <silent> gy <Plug>(coc-type-definition)
""nmap <silent> gi <Plug>(coc-implementation)
""nmap <silent> gr <Plug>(coc-references)
""nmap <leader>rn <Plug>(coc-rename)

"" LSP Config
nnoremap <leader>gd :lua vim.lsp.buf.definition()<CR>
nnoremap <leader>gi :lua vim.lsp.buf.implementation()<CR>
nnoremap <leader>gsh :lua vim.lsp.buf.signature_help()<CR>
nnoremap <leader>gr :lua vim.lsp.buf.references()<CR>
nnoremap <leader>rn :lua vim.lsp.buf.rename()<CR>
nnoremap <leader>gh :lua vim.lsp.buf.hover()<CR>
